name: Mojito CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-build:
    name: Lint and unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Check formatting
        run: |
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted properly:"
            gofmt -l .
            exit 1
          fi

      - name: Run Revive Action by pulling pre-built image
        uses: docker://ghcr.io/morphy2k/revive-action:v2
        with:
          config: ./build/ci/revive.toml
      # - name: Install golangci-lint
      #   run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/HEAD/install.sh | sh -s v2.1.2
      # - name: Run golangci-lint
      #   run: ./bin/golangci-lint run ./...

      - name: Build
        run: go build -v ./cmd/mojito

      - name: Run unit tests with coverage
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     file: ./coverage.txt
      #     fail_ci_if_error: false

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: lint-and-build
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mojito
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Install Hurl
        run: |
          curl -LO https://github.com/Orange-OpenSource/hurl/releases/download/2.0.1/hurl_2.0.1_amd64.deb
          sudo dpkg -i hurl_2.0.1_amd64.deb

      - name: Create test config
        run: mv ./config/config.postgres.yaml ./config/config.yaml

      - name: Build and start server with coverage
        run: |
          go build -o mojito ./cmd/mojito
          go test -c -covermode=atomic -coverpkg=./... -o mojito.test ./cmd/mojito
          ./mojito.test -test.coverprofile=integration.coverage.txt -test.run=TestRunMain &
          sleep 5  # Give the server time to start

      - name: Run API tests with Hurl
        run: |
          hurl --variable host=http://localhost:8080 tests/users.hurl
          hurl --variable host=http://localhost:8080 tests/login.hurl
          hurl --variable host=http://localhost:8080 tests/items.hurl

      - name: Merge coverage profiles
        run: |
          go get github.com/wadey/gocovmerge
          go install github.com/wadey/gocovmerge
          gocovmerge coverage.txt integration.coverage.txt > all.coverage.txt

      - name: Upload combined coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./all.coverage.txt
          fail_ci_if_error: false

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: integration-test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/package/Dockerfile
          push: false
          tags: mojito:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max