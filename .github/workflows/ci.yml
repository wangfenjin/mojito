name: Mojito CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    name: Lint and unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1
      - name: Start services
        run: docker compose up -d

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"
          cache: true

      - name: Check formatting
        run: |
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted properly:"
            gofmt -l .
            exit 1
          fi

      - name: Run Revive Action by pulling pre-built image
        uses: docker://ghcr.io/morphy2k/revive-action:v2
        with:
          config: ./build/ci/revive.toml

      - uses: gacts/install-hurl@v1

      # https://go.dev/doc/build-cover
      - name: Build and start server with coverage
        run: |
          go build -cover -o mojito ./cmd/mojito
          mkdir -p covdatafiles
          GOCOVERDIR=covdatafiles ./mojito &
          sleep 5  # Give the server time to start

      - name: Run API tests with Hurl
        run: |
          hurl --test --variable host=http://localhost:8080 tests/login.hurl
          hurl --test --variable host=http://localhost:8080 tests/users.hurl
          hurl --test --variable host=http://localhost:8080 tests/items.hurl
          hurl --test --variable host=http://localhost:8080 tests/utils.hurl
          curl http://localhost:8080/api/v1/test/shutdown || true

      - name: post process coverage profiles
        run: |
          go tool covdata percent -i=covdatafiles
          go tool covdata textfmt -i=covdatafiles -o=integration.coverage.txt

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./integration.coverage.txt
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: wangfenjin/mojito

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/package/Dockerfile
          push: false
          tags: mojito:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
